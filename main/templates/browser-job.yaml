apiVersion: batch/v1
kind: Job
activeDeadlineSeconds: 600
metadata:
  name: "{{ job_name }}"
  labels: 
    jobid: "{{ jobid }}"
    {%- for name, value in labels.items() %}
    {{ name }}: "{{ value }}"
    {%- endfor %}

  annotations:
    {%- for name, value in annotations.items() %}
    {{ name }}: "{{ value }}"
    {%- endfor %}

spec:
  backoffLimit: 2
{% if job_max_duration %}
  activeDeadlineSeconds: {{ job_max_duration }}
{% endif %}
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      labels:
        jobid: "{{ jobid }}"
    spec:
      restartPolicy: "Never"
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "embedserver"

      volumes:
        - name: wacz
          emptyDir: {}

        - name: dshm
          emptyDir:
            medium: Memory

{% if mode != "headless" %}
        - name: x11
          emptyDir: {}
{% endif %}

{% if profile_url %}
        - name: profile
          emptyDir: {}

      initContainers:
        - name: init-profile
          image: minio/mc
          env:
            - name: MC_HOST_profile
              valueFrom:
                secretKeyRef:
                  name: storage-auth
                  key: MC_HOST

          command: ['/bin/sh']
          args: ['-c', 'mc cp profile/{{ profile_url }} ./ && tar xvzf $(basename {{ profile_url }}) -C /profile && chown -R 1000:1000 /profile && echo "done"']

          volumeMounts:
            - name: profile
              mountPath: '/profile'
{% endif %}

      containers:

{% if mode != "headless" %}
        - name: {{ mode }}
          image: {{ vnc_image if mode == "vnc" else xvfb_image }}
          imagePullPolicy: Always
          volumeMounts:
            - name: x11
              mountPath: '/tmp/.X11-unix/'

            - name: wacz
              mountPath: '/tmp/out'

          envFrom:
            - configMapRef:
                name: browser-config

          env:
            - name: VNC_PASS
              value: "{{ annotations.vnc_pass }}"

            - name: REQ_ID
              value: "{{ jobid }}"

            - name: NO_AUDIO
              value: "1"

          resources:
            limits:
              cpu: 100m

            requests:
              cpu: 25m

{% endif %}

        # browser
        # ==================================
        - name: browser
          image: {{ browser_image }}
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: browser-config

          env:
            - name: URL
              value: "{{ start_url }}"

{% if use_proxy %}
            - name: PROXY_HOST
              value: "localhost"
{% endif %}

{% if mode == "headless" %}
            - name: HEADLESS
              value: "1"
{% else %}
            - name: DISPLAY
              value: ":99"
{% endif %}

          securityContext:
            capabilities: {'add': ['NET_ADMIN', 'SYS_ADMIN', 'SETUID']}

          resources:
            limits:
              cpu: 500m

            requests:
              cpu: 100m

          volumeMounts:
            - name: wacz
              mountPath: '/tmp/out'

            - name: dshm
              mountPath: '/dev/shm'

{% if mode != "headless" %}
            - name: x11
              mountPath: '/tmp/.X11-unix/'
{% endif %}

{% if profile_url %}
            - name: profile
              mountPath: "/tmp/profile"
              #mountPath: '/home/browser/.config/google-chrome'
{% endif %}


{% if use_proxy %}
        # pywb
        # ==================================
        - name: pywb
          image: webrecorder/browserkube-pywb
          imagePullPolicy: Always
          env:
            - name: INIT_COLLECTION
              value: "capture"

          resources:
            limits:
              cpu: 200m

            requests:
              cpu: 100m

          volumeMounts:
            - name: wacz
              mountPath: '/tmp/out'

{% endif %}

{% if driver_image %}
        # driver
        # ==================================
        - name: driver
          image: {{ driver_image }}
          imagePullPolicy: Always

          resources:
            limits:
              cpu: 100m

            requests:
              cpu: 25m

          volumeMounts:
            - name: wacz
              mountPath: '/tmp/out'

          envFrom:
            {%- if storage_prefix %}
            - secretRef:
                name: storage-auth
            {% endif %}

            - configMapRef:
                name: browser-config

          env:
            {%- for name, value in driver_env.items() %}
            - name: {{ name }}
              value: "{{ value }}"
            {%- endfor %}

{% if use_proxy %}
            - name: PROXY_HOST
              value: "localhost"
{% endif %}



{% endif %}


